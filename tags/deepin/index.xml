<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deepin on Reion's Think</title><link>/tags/deepin/</link><description>Recent content in Deepin on Reion's Think</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 02 Oct 2018 14:26:22 +0800</lastBuildDate><atom:link href="/tags/deepin/index.xml" rel="self" type="application/rss+xml"/><item><title>深度文件管理器文件拷贝原理</title><link>/posts/deepin/dde-filemanager-cp/</link><pubDate>Tue, 02 Oct 2018 14:26:22 +0800</pubDate><guid>/posts/deepin/dde-filemanager-cp/</guid><description>看了深度文件管理器 filejob 这个模块之后，对它的拷贝文件原理也了解了一下。
大概是这么一个流程：
传入两个类型为 QString 的变量：源文件地址(fromPath)、目标目录(tarDir) 求出目标文件完整地址：目标目录 + 源文件名，targetPath = tarDir + fromPath.fileName() 定义了写入数据块大小：DATA_BLOCK_SIZE 为 65536 创建两个 QFile 对象（源文件地址与目标文件地址） 调用 QFile::open() 方法，源文件打开模式为只读（ReadOnly），目标文件打开模式为只写（WriteOnly） 调用 QIODevice::read() 方法，每次读取一块字节数据，会返回读取的字节数（如果为0则代表拷贝成功，-1 说明失败） 调用 QIODevice::write() 循环写入一个数据块，也会返回写入的字节数，如果为0就会停止循环，说明文件拷贝成功 使用 Qt 读写类 QFile 来进行文件读写操作，都会调用到系统 open、read、write&amp;hellip;</description></item></channel></rss>